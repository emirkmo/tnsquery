[tool.poetry]
name = "tnsquery"
version = "0.1.0"
description = "Python API for limited queries of the Transient Name Server to obtain Supernova/Transient metadata "
authors = ["Emir Karamehmetoglu <emirkmo@github.com>"]
maintainers = ["Emir Karamehmetoglu <emirkmo@github.com>"]
readme = "README.md"
packages = [{include = "tnsquery"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.75.0"
uvicorn = { version = "^0.17.0", extras = ["standard"] }
pydantic = {version = "^1.9.0", extras = ["dotenv"]}
yarl = "^1.7.2"
ujson = "^5.1.0"
SQLAlchemy = {version = "^1.4", extras = ["mypy", "asyncio"]}
alembic = "^1.7.7"
asyncpg = {version = "^0.25.0", extras = ["sa"]}
httptools = "^0.3.0"
httpx = "^0.22.0"
astroquery = "^0.4.7.dev8038"
astropy = "^5.1.0"
numpy = "^1.23.3"

[tool.poetry.dev-dependencies]
pytest = "^7.0"
flake8 = "^4.0.1"
mypy = "^0.961"
isort = "^5.10.1"
pre-commit = "^2.19.0"
wemake-python-styleguide = "^0.16.1"
black = "^22.3.0"
autoflake = "^1.4"
SQLAlchemy = {version = "^1.4", extras = ["mypy"]}
pytest-cov = "^3.0.0"
anyio = "^3.6.1"
pytest-env = "^0.6.2"
httpx = "^0.22.0"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["tnsquery",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]

[build-system]
requires = ["poetry-core>=1.3.0"]
build-backend = "poetry.core.masonry.api"
