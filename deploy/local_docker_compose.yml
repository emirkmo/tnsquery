version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
    image: tnsquery:${TNSQUERY_VERSION:-latest}
    restart: always
    depends_on:
      - db
    #   #:
    #     #condition: service_healthy
    environment:
      TNSQUERY_RELOAD: "True"
      TNSQUERY_HOST: "0.0.0.0"
      # TNSQUERY_HOST: localhost
      TNSQUERY_DB_HOST: tnsquery-db
      TNSQUERY_DB_PORT: 5432
      TNSQUERY_DB_USER: tnsquery
      TNSQUERY_DB_PASS: tnsquery
      TNSQUERY_DB_BASE: tnsquery
    ports:
      - "8001:8001"
    volumes:
      # Adds current directory as volume.
    - .:/app/src
    env_file:
    - .env

  db:
    image: postgres:13.6-bullseye
    hostname: tnsquery-db
    environment:
      POSTGRES_PASSWORD: "tnsquery"
      POSTGRES_USER: "tnsquery"
      POSTGRES_DB: "tnsquery"
    volumes:
    - tnsquery-db-data:/var/lib/postgresql/data
    restart: always
    # healthcheck:
    #   test: pg_isready -U tnsquery
    #   interval: 20s
    #   timeout: 10s
    #   retries: 40

  migrator:
    image: tnsquery:${TNSQUERY_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      TNSQUERY_DB_HOST: tnsquery-db
      TNSQUERY_DB_PORT: 5432
      TNSQUERY_DB_USER: tnsquery
      TNSQUERY_DB_PASS: tnsquery
      TNSQUERY_DB_BASE: tnsquery
    depends_on:
      - db
        # condition: service_healthy



volumes:
  tnsquery-db-data:
    name: tnsquery-db-data
